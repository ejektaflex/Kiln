buildscript {
    ext.kotlin_version = '1.3.41'
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }

    dependencies {
        dependencies {
            classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        }
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }


}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'kotlin'

version = "${modVersion}-${mcVersion}"
group = 'ejektaflex.kiln' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'Kiln'



sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.


compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

sourceSets {
    pyro {
        kotlin {
            srcDir "src/pyro/kotlin"
        }
        java {
            srcDir "src/pyro/java"
        }
        resources {
            srcDir "src/pyro/resources"
        }
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output
    }
}

compilePyroKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: "${forgeMapType}", version: "${forgeMapping}"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'


            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                kiln { source sourceSets.main }
                pyrolysis { source sourceSets.pyro }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                kiln { source sourceSets.main }
                pyrolysis { source sourceSets.pyro }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'examplemod', '--all', '--output', file('src/generated/resources/')

            mods {
                kiln { source sourceSets.main }
                pyrolysis { source sourceSets.pyro }
            }
        }
    }
}

repositories {
    maven { url 'https://minecraft.curseforge.com/api/maven/' }
    maven {
        // location of the maven that hosts JEI files
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    mavenCentral()
}


configurations {
    mod
    pyroCompile.extendsFrom(compile)
    pyroCompileOnly.extendsFrom(compileOnly)
    pyroRuntimeOnly.extendsFrom(runtimeOnly)
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "META_INF/mods.toml"
        expand "version": project.version
    }
    from(sourceSets.pyro.resources.srcDirs) {
        include "META_INF/mods.toml"
    }
}

dependencies {

    minecraft "net.minecraftforge:forge:${mcVersion}-${forgeVersion}"

    compile "kottle:Kottle:$kottleVersion"
    mod "kottle:Kottle:$kottleVersion"

    // compile against the JEI API but do not include it at runtime
    compileOnly fg.deobf("mezz.jei:jei-${mcVersion}:${jeiVersion}:api")
    // at runtime, use the full JEI jar
    runtimeOnly fg.deobf("mezz.jei:jei-${mcVersion}:${jeiVersion}")

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"


}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title": "Kiln",
                "Specification-Vendor": "Ejektaflex",
                "Specification-Version": "1", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"Ejektaflex",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}


// Example configuration to allow publishing using the maven-publish task
// we define a custom artifact that is sourced from the reobfJar output task
// and then declare that to be published
// Note you'll need to add a repository here
def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}